import { useTranslation } from "react-i18next";
import axios from "axios";
import * as _ from "lodash";
import React from "react";
import RichtextBlock from "./blocks/RichtextBlock";
import { Form } from "@rjsf/chakra-ui";
import contentPageForm from "../schemas/contentPageForm";
import ImageBlock from "./blocks/ImageBlock";
import { AzureFileUploadService } from "../services/file-upload/azure/AzureFileUploadService";

const slugify = (data: string) => {
  if (!data) return "";
  return data
    .normalize("NFKD")
    .toLowerCase()
    .trim()
    .replace(/\s+/g, "-") // Replace spaces with -
    .replace(/[^\w\-]+/g, "") // Remove all non-word chars
    .replace(/\-\-+/g, "-"); // Replace multiple - with single -
};

const flatten = (obj: any = {}, res: any = {}, extraKey = "") => {
  console.log(extraKey);
  console.log(obj);
  for (let key in obj) {
    console.log(key);
    console.log(typeof obj[key]);
    if (typeof obj[key] !== "object" || _.isArray(obj[key])) {
      res[extraKey + key] = obj[key];
    } else {
      console.log("flattenJSON");
      flatten(obj[key], res, `${extraKey}${key}.`);
    }
  }
  return res;
};

const ContentPageForm: React.FC<any> = ({
  initialData,
  formSubmitHandler,
}: any) => {
  const { t } = useTranslation("configui");
  const [formData, setFormData] = React.useState<any>(initialData);
  const azureFileUploadService = new AzureFileUploadService();

  const ui = {
    urlSlug: {
      "ui:help": "Slug is auto-generated by default, click above to edit",
      "ui:placeholder": formData?.urlSlug ?? slugify(formData?.title),
    },
    blocks: {
      items: {
        blockType: {
          "ui:placeholder": "Block type",
        },
        blockData: {
          "ui:options": {
            label: false,
          },
          imgSrc: {
            "ui:widget": "imb",
          },
          richtextData: {
            "ui:widget": "rtb",
          },
        },
      },
    },
  };
  const widgets = {
    rtb: RichtextBlock,
    imb: ImageBlock,
  };
  ImageBlock.defaultProps = {
    options: {
      fileUploader: azureFileUploadService,
    },
  };
  const onSubmit = ({ formData }: any, e: any) => {
    if (!formData["urlSlug"]) formData["urlSlug"] = slugify(formData?.title);
    formSubmitHandler(formData);
  };
  return (
    <Form
      onChange={(e: any) => {
        console.log(e);
        setFormData(e.formData);
      }}
      formData={formData}
      schema={contentPageForm as any}
      uiSchema={ui}
      widgets={widgets}
      onSubmit={onSubmit}
    ></Form>
  );
};
export default ContentPageForm;
